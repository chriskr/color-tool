{"version":3,"sources":["App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","MainContent","styled","div","ControlsContainer","form","ControlsColorSpace","ColorSpaceTitle","h3","ControlRow","ExampleColor","DisplayColor","color","isDark","getLuminance","style","backgroundColor","rgb","toCss","padding","margin","hex","hsl","setters","red","v","r","green","g","blue","b","redValue","greenValue","blueValue","hue","hsv","h","saturation","s","value","hueValue","saturationValue","valueValue","hueL","saturationL","lightness","l","hueLValue","saturationLValue","lightnessValue","set","getters","Math","round","get","getOnInput","setColor","event","target","currentTarget","HTMLInputElement","setter","id","Number","parseInt","isFinite","Array","from","elements","forEach","input","hasOwnProperty","Color","handleSubmit","preventDefault","stopPropagation","App","useState","onInput","onSubmit","type","defaultValue","min","max","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d220329c.chunk.js","sourcesContent":["import React, { FormEvent, useState } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Color from 'color-interfaces';\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n\n    background: hsl(0, 0%, 95%);\n    font: menu;\n\n  }\n\n  html {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  body {\n    display: flex;\n    flex-direction: column;\n  align-items: center;\n  padding-bottom: 70px;\n\n  }\n\n  h1, h2, h3 {\n    font-weight: normal;\n  }\n\n  h1 {\n    background-image: url(\"http://chriskr.github.io/home/wiking.svg\");\n    background-repeat: no-repeat;\n    background-position: 0 100px;\n    background-size: 70px;\n    margin: 0;\n    padding: 20px 0 120px 0;\n    font-size: 50px;\n    font-weight: 300;\n  }\n`;\n\nconst MainContent = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst ControlsContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 0;\n`;\n\nconst ControlsColorSpace = styled.div`\n  padding: 8px 16px;\n  input[type='range'] {\n    width: 240px;\n  }\n  input[type='number'] {\n    margin-left: 12px;\n    width: 4em;\n  }\n  input[type='text'] {\n    margin-left: 1px;\n    width: 6em;\n  }\n  textarea {\n    resize: none;\n    border: none;\n  }\n`;\n\nconst ColorSpaceTitle = styled.h3`\n  margin: -8px -16px 8px -16px;\n  padding: 8px 16px;\n  background-color: hsl(0, 0%, 85%);\n`;\n\nconst ControlRow = styled.div`\n  display: flex;\n  align-items: center;\n\n  label {\n    min-width: 80px;\n  }\n`;\n\nconst ExampleColor = styled.div`\n  display: flex;\n  width: 120px;\n  flex-direction: column;\n  padding: 50px;\n`;\n\nconst DisplayColor = ({ color }: { color: Color }) => {\n  const isDark = color.getLuminance() < 0.35;\n  const style = {\n    backgroundColor: color.rgb.toCss(),\n    color: isDark ? 'white' : 'black',\n  };\n  return (\n    <ExampleColor style={style}>\n      <h2 style={{ padding: '0', margin: '0' }}>color sample</h2>\n      <div>{color.hex.toCss()}</div>\n      <div>{color.rgb.toCss()}</div>\n      <div>{color.hsl.toCss()}</div>\n    </ExampleColor>\n  );\n};\n\nconst setters: Object & Record<string, (color: Color, v: any) => void> = {\n  red: (color: Color, v: number) => (color.rgb.r = v),\n  green: (color: Color, v: number) => (color.rgb.g = v),\n  blue: (color: Color, v: number) => (color.rgb.b = v),\n  redValue: (color: Color, v: number) => (color.rgb.r = v),\n  greenValue: (color: Color, v: number) => (color.rgb.g = v),\n  blueValue: (color: Color, v: number) => (color.rgb.b = v),\n\n  hue: (color: Color, v: number) => (color.hsv.h = v),\n  saturation: (color: Color, v: number) => (color.hsv.s = v / 100),\n  value: (color: Color, v: number) => (color.hsv.v = v / 100),\n  hueValue: (color: Color, v: number) => (color.hsv.h = v),\n  saturationValue: (color: Color, v: number) => (color.hsv.s = v / 100),\n  valueValue: (color: Color, v: number) => (color.hsv.v = v / 100),\n\n  hueL: (color: Color, v: number) => (color.hsl.h = v),\n  saturationL: (color: Color, v: number) => (color.hsl.s = v / 100),\n  lightness: (color: Color, v: number) => (color.hsl.l = v / 100),\n  hueLValue: (color: Color, v: number) => (color.hsl.h = v),\n  saturationLValue: (color: Color, v: number) => (color.hsl.s = v / 100),\n  lightnessValue: (color: Color, v: number) => (color.hsl.l = v / 100),\n\n  hex: (color: Color, v: string) => color.hex.set(v),\n};\n\nconst getters: Object & Record<string, (color: Color) => string | number> = {\n  red: (color: Color) => color.rgb.r,\n  green: (color: Color) => color.rgb.g,\n  blue: (color: Color) => color.rgb.b,\n  redValue: (color: Color) => color.rgb.r,\n  greenValue: (color: Color) => color.rgb.g,\n  blueValue: (color: Color) => color.rgb.b,\n\n  hue: (color: Color) => Math.round(color.hsv.h),\n  saturation: (color: Color) => Math.round(color.hsv.s * 100),\n  value: (color: Color) => Math.round(color.hsv.v * 100),\n  hueValue: (color: Color) => Math.round(color.hsv.h),\n  saturationValue: (color: Color) => Math.round(color.hsv.s * 100),\n  valueValue: (color: Color) => Math.round(color.hsv.v * 100),\n\n  hueL: (color: Color) => Math.round(color.hsl.h),\n  saturationL: (color: Color) => Math.round(color.hsl.s * 100),\n  lightness: (color: Color) => Math.round(color.hsl.l * 100),\n  hueLValue: (color: Color) => Math.round(color.hsl.h),\n  saturationLValue: (color: Color) => Math.round(color.hsl.s * 100),\n  lightnessValue: (color: Color) => Math.round(color.hsl.l * 100),\n\n  hex: (color: Color) => color.hex.get(),\n};\n\nconst getOnInput = (\n  color: Color,\n  setColor: React.Dispatch<React.SetStateAction<Color>>\n) => (event: FormEvent<HTMLFormElement>) => {\n  const { target, currentTarget } = event;\n\n  if (!(target instanceof HTMLInputElement)) {\n    return;\n  }\n\n  const setter = setters[target.id];\n  const value = Number.parseInt(target.value);\n\n  if (!(setter && Number.isFinite(value))) {\n    return;\n  }\n\n  setter(color, value);\n\n  Array.from(currentTarget.elements).forEach((input) => {\n    if (\n      input instanceof HTMLInputElement &&\n      input !== target &&\n      getters.hasOwnProperty(input.id)\n    ) {\n      input.value = `${getters[input.id](color)}`;\n    }\n  });\n\n  setColor(new Color(color.rgb.get()));\n};\n\nconst handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\nconst App = () => {\n  const [color, setColor] = useState(new Color([127, 127, 127]));\n\n  return (\n    <>\n      <GlobalStyle />\n      <h1>color converter</h1>\n      <MainContent>\n        <ControlsContainer\n          onInput={getOnInput(color, setColor)}\n          onSubmit={handleSubmit}\n        >\n          <ControlsColorSpace>\n            <ColorSpaceTitle>hex</ColorSpaceTitle>\n            <ControlRow>\n              <label>hex</label>\n              <span>#</span>\n              <input type=\"text\" id=\"hex\" defaultValue={color.hex.get()} />\n            </ControlRow>\n          </ControlsColorSpace>\n\n          <ControlsColorSpace>\n            <ColorSpaceTitle>rgb</ColorSpaceTitle>\n            <ControlRow>\n              <label>red</label>\n              <input\n                type=\"range\"\n                id=\"red\"\n                min=\"0\"\n                max=\"255\"\n                defaultValue={color.rgb.r}\n              />\n              <input\n                type=\"number\"\n                id=\"redValue\"\n                min=\"0\"\n                max=\"255\"\n                defaultValue={color.rgb.r}\n              />\n            </ControlRow>\n            <ControlRow>\n              <label>green</label>\n              <input\n                type=\"range\"\n                id=\"green\"\n                min=\"0\"\n                max=\"255\"\n                defaultValue={color.rgb.g}\n              />\n              <input\n                type=\"number\"\n                id=\"greenValue\"\n                min=\"0\"\n                max=\"255\"\n                defaultValue={color.rgb.b}\n              />\n            </ControlRow>\n            <ControlRow>\n              <label>blue</label>\n              <input\n                type=\"range\"\n                id=\"blue\"\n                min=\"0\"\n                max=\"255\"\n                defaultValue={color.rgb.b}\n              />\n              <input\n                type=\"number\"\n                id=\"blueValue\"\n                min=\"0\"\n                max=\"255\"\n                defaultValue={color.rgb.b}\n              />\n            </ControlRow>\n          </ControlsColorSpace>\n\n          <ControlsColorSpace>\n            <ColorSpaceTitle>hsv</ColorSpaceTitle>\n            <ControlRow>\n              <label>hue</label>\n              <input\n                type=\"range\"\n                id=\"hue\"\n                min=\"0\"\n                max=\"360\"\n                defaultValue={getters.hue(color)}\n              />\n              <input\n                type=\"number\"\n                id=\"hueValue\"\n                min=\"0\"\n                max=\"360\"\n                defaultValue={getters.hue(color)}\n              />\n            </ControlRow>\n            <ControlRow>\n              <label>saturation</label>\n              <input\n                type=\"range\"\n                id=\"saturation\"\n                min=\"0\"\n                max=\"100\"\n                defaultValue={getters.saturation(color)}\n              />\n              <input\n                type=\"number\"\n                id=\"saturationValue\"\n                min=\"0\"\n                max=\"100\"\n                defaultValue={getters.saturation(color)}\n              />\n            </ControlRow>\n            <ControlRow>\n              <label>value</label>\n              <input\n                type=\"range\"\n                id=\"value\"\n                min=\"0\"\n                max=\"100\"\n                defaultValue={getters.value(color)}\n              />\n              <input\n                type=\"number\"\n                id=\"valueValue\"\n                min=\"0\"\n                max=\"100\"\n                defaultValue={getters.value(color)}\n              />\n            </ControlRow>\n          </ControlsColorSpace>\n\n          <ControlsColorSpace>\n            <ColorSpaceTitle>hsl</ColorSpaceTitle>\n            <ControlRow>\n              <label>hue</label>\n              <input\n                type=\"range\"\n                id=\"hueL\"\n                min=\"0\"\n                max=\"360\"\n                defaultValue={getters.hueL(color)}\n              />\n              <input\n                type=\"number\"\n                id=\"hueLValue\"\n                min=\"0\"\n                max=\"360\"\n                defaultValue={getters.hueL(color)}\n              />\n            </ControlRow>\n            <ControlRow>\n              <label>saturation</label>\n              <input\n                type=\"range\"\n                id=\"saturationL\"\n                min=\"0\"\n                max=\"100\"\n                defaultValue={getters.saturationL(color)}\n              />\n              <input\n                type=\"number\"\n                id=\"saturationLValue\"\n                min=\"0\"\n                max=\"100\"\n                defaultValue={getters.saturationL(color)}\n              />\n            </ControlRow>\n            <ControlRow>\n              <label>lightness</label>\n              <input\n                type=\"range\"\n                id=\"lightness\"\n                min=\"0\"\n                max=\"100\"\n                defaultValue={getters.lightness(color)}\n              />\n              <input\n                type=\"number\"\n                id=\"lightnessValue\"\n                min=\"0\"\n                max=\"100\"\n                defaultValue={getters.lightness(color)}\n              />\n            </ControlRow>\n          </ControlsColorSpace>\n        </ControlsContainer>\n        <DisplayColor color={color} />\n      </MainContent>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}