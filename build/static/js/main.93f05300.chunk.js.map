{"version":3,"sources":["wiking.svg","github.svg","utils.ts","atoms.tsx","App.tsx","index.tsx","bg2.svg","dot.svg"],"names":["module","exports","setters","red","color","v","rgb","r","green","g","blue","b","redValue","greenValue","blueValue","hue","hsv","h","saturation","s","value","hueValue","saturationValue","valueValue","hueL","hsl","saturationL","lightness","l","hueLValue","saturationLValue","lightnessValue","hex","set","alpha","alphaValue","getters","Math","round","get","getOnInput","setColor","event","target","currentTarget","HTMLInputElement","setter","id","Number","parseInt","e","Array","from","elements","forEach","input","hasOwnProperty","copy","handleSubmit","preventDefault","stopPropagation","getLineraGradient","direction","colorStops","colorInterface","step","length","map","colorStop","index","toCss","join","GlobalStyle","createGlobalStyle","Wrapper","styled","div","Header","header","wiking","MainContent","ControlsContainer","form","ControlsColorSpace","dot","ColorSpaceTitle","h3","ControlsBlock","ControlRow","ExampleColor","bg2","RepoLink","a","github","DisplayColor","isDark","mixWithColor","Color","ColorType","HSL","getLuminance","style","backgroundColor","rgba","hexa","hsla","GradientStyle","c","getStyleDeclarations","App","useState","onInput","onSubmit","type","defaultValue","spellCheck","min","max","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93f05300.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wiking.0101b028.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.04e2615d.svg\";","import React, { FormEvent } from 'react';\nimport Color, {\n  RGBInterface,\n  HSVInterface,\n  HSLInterface,\n  RGB,\n  HSL,\n  HSV,\n  RGBAInterface,\n  RGBA,\n} from 'color-interfaces';\nimport bg2 from './bg2.svg';\n\nexport const setters: Object &\n  Record<string, (color: Color, v: any) => void> = {\n  red: (color: Color, v: number) => (color.rgb.r = v),\n  green: (color: Color, v: number) => (color.rgb.g = v),\n  blue: (color: Color, v: number) => (color.rgb.b = v),\n  redValue: (color: Color, v: number) => (color.rgb.r = v),\n  greenValue: (color: Color, v: number) => (color.rgb.g = v),\n  blueValue: (color: Color, v: number) => (color.rgb.b = v),\n\n  hue: (color: Color, v: number) => (color.hsv.h = v),\n  saturation: (color: Color, v: number) => (color.hsv.s = v / 100),\n  value: (color: Color, v: number) => (color.hsv.v = v / 100),\n  hueValue: (color: Color, v: number) => (color.hsv.h = v),\n  saturationValue: (color: Color, v: number) => (color.hsv.s = v / 100),\n  valueValue: (color: Color, v: number) => (color.hsv.v = v / 100),\n\n  hueL: (color: Color, v: number) => (color.hsl.h = v),\n  saturationL: (color: Color, v: number) => (color.hsl.s = v / 100),\n  lightness: (color: Color, v: number) => (color.hsl.l = v / 100),\n  hueLValue: (color: Color, v: number) => (color.hsl.h = v),\n  saturationLValue: (color: Color, v: number) => (color.hsl.s = v / 100),\n  lightnessValue: (color: Color, v: number) => (color.hsl.l = v / 100),\n\n  hex: (color: Color, v: string) => color.hex.set(v),\n\n  alpha: (color: Color, v: number) => (color.alpha = v / 100),\n  alphaValue: (color: Color, v: number) => (color.alpha = v / 100),\n};\n\nexport const getters: Object &\n  Record<string, (color: Color) => string | number> = {\n  red: (color: Color) => color.rgb.r,\n  green: (color: Color) => color.rgb.g,\n  blue: (color: Color) => color.rgb.b,\n  redValue: (color: Color) => color.rgb.r,\n  greenValue: (color: Color) => color.rgb.g,\n  blueValue: (color: Color) => color.rgb.b,\n\n  hue: (color: Color) => Math.round(color.hsv.h),\n  saturation: (color: Color) => Math.round(color.hsv.s * 100),\n  value: (color: Color) => Math.round(color.hsv.v * 100),\n  hueValue: (color: Color) => Math.round(color.hsv.h),\n  saturationValue: (color: Color) => Math.round(color.hsv.s * 100),\n  valueValue: (color: Color) => Math.round(color.hsv.v * 100),\n\n  hueL: (color: Color) => Math.round(color.hsl.h),\n  saturationL: (color: Color) => Math.round(color.hsl.s * 100),\n  lightness: (color: Color) => Math.round(color.hsl.l * 100),\n  hueLValue: (color: Color) => Math.round(color.hsl.h),\n  saturationLValue: (color: Color) => Math.round(color.hsl.s * 100),\n  lightnessValue: (color: Color) => Math.round(color.hsl.l * 100),\n\n  hex: (color: Color) => color.hex.get(),\n\n  alpha: (color: Color) => Math.round(color.alpha * 100),\n  alphaValue: (color: Color) => Math.round(color.alpha * 100),\n};\n\nexport const getOnInput = (\n  color: Color,\n  setColor: React.Dispatch<React.SetStateAction<Color>>\n) => (event: FormEvent<HTMLFormElement>) => {\n  const { target, currentTarget } = event;\n\n  if (!(target instanceof HTMLInputElement)) {\n    return;\n  }\n\n  const setter = setters[target.id];\n  const value =\n    target.id === 'hex' ? target.value : Number.parseInt(target.value);\n\n  try {\n    setter(color, value);\n  } catch (e) {\n    return;\n  }\n\n  Array.from(currentTarget.elements).forEach((input) => {\n    if (\n      input instanceof HTMLInputElement &&\n      input !== target &&\n      getters.hasOwnProperty(input.id)\n    ) {\n      input.value = `${getters[input.id](color)}`;\n    }\n  });\n\n  setColor(color.copy());\n};\n\nexport const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\ntype GetLineraGradientArgs = {\n  direction?: string;\n  colorStops: (RGB | HSL | HSV | RGBA)[];\n  colorInterface: RGBInterface | HSVInterface | HSLInterface | RGBAInterface;\n};\n\ntype GetLineraGradient = (options: GetLineraGradientArgs) => string;\n\nexport const getLineraGradient: GetLineraGradient = ({\n  direction = '90deg',\n  colorStops,\n  colorInterface,\n}) => {\n  const step = 1 / (colorStops.length - 1);\n  return `linear-gradient(${[\n    direction,\n    ...colorStops.map(\n      (colorStop, index) =>\n        // @ts-ignore\n        `${colorInterface.set(colorStop).toCss()} ${Math.round(\n          index * step * 100\n        )}%`\n    ),\n  ].join(', ')})`;\n};\n\nexport const getStyleDeclarations = (color: Color) => {\n  const c = new Color();\n  return `\n    #red:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [0, color.rgb.g, color.rgb.b],\n          [255, color.rgb.g, color.rgb.b],\n        ],\n        colorInterface: c.rgb,\n      })};\n    }\n\n    #green:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [color.rgb.r, 0, color.rgb.b],\n          [color.rgb.r, 255, color.rgb.b],\n        ],\n        colorInterface: c.rgb,\n      })};\n    }\n\n    #blue:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [color.rgb.r, color.rgb.g, 0],\n          [color.rgb.r, color.rgb.g, 255],\n        ],\n        colorInterface: c.rgb,\n      })};\n    }\n\n    #hue:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [0, color.hsv.s, color.hsv.v],\n          [60, color.hsv.s, color.hsv.v],\n          [120, color.hsv.s, color.hsv.v],\n          [180, color.hsv.s, color.hsv.v],\n          [240, color.hsv.s, color.hsv.v],\n          [300, color.hsv.s, color.hsv.v],\n          [360, color.hsv.s, color.hsv.v],\n        ],\n        colorInterface: c.hsv,\n      })};\n    }\n\n    #saturation:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [color.hsv.h, 0, color.hsv.v],\n          [color.hsv.h, 1, color.hsv.v],\n        ],\n        colorInterface: c.hsv,\n      })};\n    }\n\n    #value:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [color.hsv.h, color.hsv.s, 0],\n          [color.hsv.h, color.hsv.s, 1],\n        ],\n        colorInterface: c.hsv,\n      })};\n    }\n\n    #hueL:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [0, color.hsl.s, color.hsl.l],\n          [60, color.hsl.s, color.hsl.l],\n          [120, color.hsl.s, color.hsl.l],\n          [180, color.hsl.s, color.hsl.l],\n          [240, color.hsl.s, color.hsl.l],\n          [300, color.hsl.s, color.hsl.l],\n          [360, color.hsl.s, color.hsl.l],\n        ],\n        colorInterface: c.hsl,\n      })};\n    }\n\n    #saturationL:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [color.hsl.h, 0, color.hsl.l],\n          [color.hsl.h, 1, color.hsl.l],\n        ],\n        colorInterface: c.hsl,\n      })};\n    }\n\n    #lightness:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [color.hsl.h, color.hsl.s, 0],\n          [color.hsl.h, color.hsl.s, 0.5],\n          [color.hsl.h, color.hsl.s, 1],\n        ],\n        colorInterface: c.hsl,\n      })};\n    }\n\n    #alpha:hover {\n      background-image: ${getLineraGradient({\n        colorStops: [\n          [color.rgba.r, color.rgba.g, color.rgba.b, 0],\n          [color.rgba.r, color.rgba.g, color.rgba.b, 1],\n        ],\n        colorInterface: c.rgba,\n      })}, url(${bg2});\n    }\n  `;\n};\n","import React, { FunctionComponent } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Color, { ColorType } from 'color-interfaces';\nimport { getStyleDeclarations } from './utils';\nimport wiking from './wiking.svg';\nimport dot from './dot.svg';\nimport github from './github.svg';\nimport bg2 from './bg2.svg';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,\nbody {\n  color: hsl(0, 0%, 75%);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  height: 100%;\n  background-image: linear-gradient(0deg, hsl(0, 0%, 10%), hsl(0, 0%, 25%));\n}\n\nbody {\n  height: 100%;\n\n}\n\n#root {\n  height: 100%;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nh1,\nh2,\nh3 {\n  font-weight: 300;\n  font-size: 1em;\n}\n\nh1 {\n  margin: 0;\n  padding: 0;\n  font-size: 90px;\n  font-weight: 100;\n  color: hsl(0, 0%, 35%);\n}\n\n`;\n\nexport const Wrapper = styled.div`\n  padding: 50px 0;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 80px 0 250px;\n  background-image: url(${wiking});\n  background-repeat: no-repeat;\n  background-position: 35px 50%;\n  background-size: 85px;\n`;\n\nexport const MainContent = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 70px 0;\n`;\n\nexport const ControlsContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ControlsColorSpace = styled.div`\n  padding: 8px 0;\n  display: flex;\n  flex-direction: row;\n  input {\n    font: inherit;\n    color: inherit;\n  }\n  input:active,\n  input:focus {\n    outline: none;\n  }\n  input[type='range'] {\n    width: 720px;\n    height: 21px;\n    -webkit-appearance: none;\n    margin: 6px -6px;\n    background-color: transparent;\n    background-image: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0.05) 0,\n      rgba(255, 255, 255, 0.05) 100%\n    );\n    background-size: 708px;\n    background-repeat: no-repeat;\n    background-position: 6px 0;\n  }\n\n  input[type='range']::-webkit-slider-thumb {\n    margin: 0;\n    -webkit-appearance: none;\n    height: 36px;\n    width: 12px;\n    background: transparent;\n    background-image: url(${dot});\n    background-repeat: no-repeat;\n    background-position: 50% 100%;\n    opacity: 0.3;\n  }\n\n  input[type='range']:hover::-webkit-slider-thumb {\n    opacity: 1;\n  }\n\n  input[type='range']::-moz-range-thumb {\n    margin: 0;\n    -webkit-appearance: none;\n    height: 36px;\n    width: 12px;\n    background: transparent;\n    background-image: url(${dot});\n    background-repeat: no-repeat;\n    background-position: 50% 100%;\n    opacity: 0.3;\n    border: none;\n    border-radius: none;\n  }\n\n  input[type='range']:hover::-moz-range-thumb {\n    opacity: 1;\n  }\n  input[type='number'],\n  input[type='text'] {\n    border: none;\n    padding: 0 2px;\n    margin: 0 0 0 16px;\n    background: transparent;\n  }\n  input[type='number'] {\n    margin-left: 12px;\n    width: 68px;\n  }\n  input[type='text'] {\n    margin-left: 1px;\n    width: 6em;\n  }\n  textarea {\n    resize: none;\n    border: none;\n  }\n  /*\nopacity: 0;\ntransition: opacity 0.5s;\n&:hover {\n  opacity: 1;\n}\n*/\n`;\n\nexport const ColorSpaceTitle = styled.h3`\n  margin: 0;\n  padding: 0;\n  width: 140px;\n  font-size: 90px;\n  font-weight: 100;\n  display: flex;\n  align-items: center;\n  color: hsl(0, 0%, 35%);\n`;\n\nexport const ControlsBlock = styled.div``;\n\nexport const ControlRow = styled.div`\n  display: flex;\n  align-items: center;\n\n  label {\n    width: 100px;\n    text-align: right;\n    padding-right: 12px;\n  }\n`;\n\nexport const ExampleColor = styled.div`\n  display: flex;\n  width: 170px;\n  padding: 18px 36px;\n  flex-direction: column;\n  position: relative;\n  white-space: nowrap;\n  &::before {\n    position: absolute;\n    content: '';\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: -1;\n    background-image: url(${bg2});\n  }\n`;\n\nexport const RepoLink = styled.a`\n  display: block;\n  background-image: url(${github});\n  background-repeat: no-repeat;\n  background-position: 0 50%;\n  background-size: 20px;\n  padding-left: 32px;\n  height: 24px;\n  line-height: 24px;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n  /*\nposition: absolute;\nbottom: -36px;\nleft: 0;\n*/\n  color: inherit;\n  float: right;\n  width: 68px;\n`;\n\nexport const DisplayColor: FunctionComponent<{\n  color: Color;\n}> = ({ color }) => {\n  const adjustColor = color\n    .copy()\n    .mixWithColor(new Color([0, 0, 0.95], ColorType.HSL), 1 - color.alpha);\n  const isDark = adjustColor.getLuminance() < 0.35;\n  const style = {\n    backgroundColor: color.rgba.toCss(),\n    color: isDark ? 'white' : 'black',\n  };\n  return (\n    <ExampleColor style={style}>\n      <div>{color.hex.toCss()}</div>\n      <div>{color.rgb.toCss()}</div>\n      <div>{color.hsl.toCss()}</div>\n      <div>{color.hexa.toCss()}</div>\n      <div>{color.rgba.toCss()}</div>\n      <div>{color.hsla.toCss()}</div>\n    </ExampleColor>\n  );\n};\n\nexport const GradientStyle: FunctionComponent<{\n  color: Color;\n}> = ({ color }) => <style>{getStyleDeclarations(color)}</style>;\n","import React, { useState } from 'react';\nimport Color from 'color-interfaces';\nimport { getters, getOnInput, handleSubmit } from './utils';\nimport {\n  GlobalStyle,\n  Wrapper,\n  Header,\n  MainContent,\n  ControlsContainer,\n  ControlsColorSpace,\n  ColorSpaceTitle,\n  ControlsBlock,\n  ControlRow,\n  RepoLink,\n  DisplayColor,\n  GradientStyle,\n} from './atoms';\n\nconst App = () => {\n  const [color, setColor] = useState(new Color([246, 232, 17]));\n\n  return (\n    <Wrapper>\n      <GlobalStyle />\n      <Header>\n        <h1>color tool</h1>\n        <DisplayColor color={color}></DisplayColor>\n      </Header>\n      <GradientStyle color={color} />\n      <MainContent>\n        <ControlsContainer\n          onInput={getOnInput(color, setColor)}\n          onSubmit={handleSubmit}\n        >\n          <ControlsColorSpace>\n            <ColorSpaceTitle></ColorSpaceTitle>\n            <ControlsBlock>\n              <ControlRow>\n                <label>hex</label>\n                <span>#</span>\n                <input\n                  type=\"text\"\n                  id=\"hex\"\n                  defaultValue={color.hex.get()}\n                  spellCheck={false}\n                />\n              </ControlRow>\n            </ControlsBlock>\n          </ControlsColorSpace>\n\n          <ControlsColorSpace>\n            <ColorSpaceTitle>rgb</ColorSpaceTitle>\n            <ControlsBlock>\n              <ControlRow>\n                <label>red</label>\n                <div>\n                  <input\n                    type=\"range\"\n                    id=\"red\"\n                    min=\"0\"\n                    max=\"255\"\n                    defaultValue={color.rgb.r}\n                  />\n                </div>\n                <input\n                  type=\"number\"\n                  id=\"redValue\"\n                  min=\"0\"\n                  max=\"255\"\n                  defaultValue={color.rgb.r}\n                />\n              </ControlRow>\n              <ControlRow>\n                <label>green</label>\n                <input\n                  type=\"range\"\n                  id=\"green\"\n                  min=\"0\"\n                  max=\"255\"\n                  defaultValue={color.rgb.g}\n                />\n                <input\n                  type=\"number\"\n                  id=\"greenValue\"\n                  min=\"0\"\n                  max=\"255\"\n                  defaultValue={color.rgb.b}\n                />\n              </ControlRow>\n              <ControlRow>\n                <label>blue</label>\n                <input\n                  type=\"range\"\n                  id=\"blue\"\n                  min=\"0\"\n                  max=\"255\"\n                  defaultValue={color.rgb.b}\n                />\n                <input\n                  type=\"number\"\n                  id=\"blueValue\"\n                  min=\"0\"\n                  max=\"255\"\n                  defaultValue={color.rgb.b}\n                />\n              </ControlRow>\n            </ControlsBlock>\n          </ControlsColorSpace>\n\n          <ControlsColorSpace>\n            <ColorSpaceTitle>hsv</ColorSpaceTitle>\n            <ControlsBlock>\n              <ControlRow>\n                <label>hue</label>\n                <input\n                  type=\"range\"\n                  id=\"hue\"\n                  min=\"0\"\n                  max=\"360\"\n                  defaultValue={getters.hue(color)}\n                />\n                <input\n                  type=\"number\"\n                  id=\"hueValue\"\n                  min=\"0\"\n                  max=\"360\"\n                  defaultValue={getters.hue(color)}\n                />\n              </ControlRow>\n              <ControlRow>\n                <label>saturation</label>\n                <input\n                  type=\"range\"\n                  id=\"saturation\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.saturation(color)}\n                />\n                <input\n                  type=\"number\"\n                  id=\"saturationValue\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.saturation(color)}\n                />\n              </ControlRow>\n              <ControlRow>\n                <label>value</label>\n                <input\n                  type=\"range\"\n                  id=\"value\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.value(color)}\n                />\n                <input\n                  type=\"number\"\n                  id=\"valueValue\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.value(color)}\n                />\n              </ControlRow>\n            </ControlsBlock>\n          </ControlsColorSpace>\n\n          <ControlsColorSpace>\n            <ColorSpaceTitle>hsl</ColorSpaceTitle>\n            <ControlsBlock>\n              <ControlRow>\n                <label>hue</label>\n                <input\n                  type=\"range\"\n                  id=\"hueL\"\n                  min=\"0\"\n                  max=\"360\"\n                  defaultValue={getters.hueL(color)}\n                />\n                <input\n                  type=\"number\"\n                  id=\"hueLValue\"\n                  min=\"0\"\n                  max=\"360\"\n                  defaultValue={getters.hueL(color)}\n                />\n              </ControlRow>\n              <ControlRow>\n                <label>saturation</label>\n                <input\n                  type=\"range\"\n                  id=\"saturationL\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.saturationL(color)}\n                />\n                <input\n                  type=\"number\"\n                  id=\"saturationLValue\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.saturationL(color)}\n                />\n              </ControlRow>\n              <ControlRow>\n                <label>lightness</label>\n                <input\n                  type=\"range\"\n                  id=\"lightness\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.lightness(color)}\n                />\n                <input\n                  type=\"number\"\n                  id=\"lightnessValue\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.lightness(color)}\n                />\n              </ControlRow>\n            </ControlsBlock>\n          </ControlsColorSpace>\n\n          <ControlsColorSpace>\n            <ColorSpaceTitle></ColorSpaceTitle>\n            <ControlsBlock>\n              <ControlRow>\n                <label>alpha</label>\n                <input\n                  type=\"range\"\n                  id=\"alpha\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.alpha(color)}\n                />\n                <input\n                  type=\"number\"\n                  id=\"alphaValue\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue={getters.alpha(color)}\n                />\n              </ControlRow>\n            </ControlsBlock>\n          </ControlsColorSpace>\n        </ControlsContainer>\n      </MainContent>\n      <RepoLink href=\"https://github.com/chriskr/color-tool\">\n        color-tool\n      </RepoLink>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/bg2.808fc923.svg\";","module.exports = __webpack_public_path__ + \"static/media/dot.863d1f3e.svg\";"],"sourceRoot":""}